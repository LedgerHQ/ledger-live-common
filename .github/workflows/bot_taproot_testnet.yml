name: Bot 'Taproot'
on:
  schedule:
    - cron: "0 6-18 * * 1-5"

jobs:
  start-runner:
    name: start self-hosted EC2 runner
    runs-on: [ledger-live-common]
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: get latest LLD runner AMI id
        id: get-ami-id
        run: |
          echo "::set-output name=ami-id::$(aws ec2 describe-images  --filters 'Name=name,Values=ledger-live-common-runner' --query 'Images[*].ImageId' --output text)"
      - name: start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          ec2-image-id: ${{ steps.get-ami-id.outputs.ami-id }}
          ec2-instance-type: c5.4xlarge
          subnet-id: subnet-03b7b4dff904e0142 # production-shared-private-eu-west-1a
          security-group-id: sg-010daba499648d1e7 # infra-gha-runner-sg
      - name: get volume-id
        id: get-volume-id
        run: |
          echo "::set-output name=volume-id::$(aws ec2 describe-instances --instance-ids ${{ steps.start-ec2-runner.outputs.ec2-instance-id }} --query 'Reservations[*].Instances[*].BlockDeviceMappings[*].Ebs.VolumeId' --output text)"
      - name: resize rootfs
        env:
          VOLUME_ID: ${{ steps.get-volume-id.outputs.volume-id }}
        run: |
          aws ec2 modify-volume --size 30 --volume-id $VOLUME_ID

  run-bot:
    runs-on: ${{ needs.start-runner.outputs.label }}
    needs: [start-runner]
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v2
      - name: Retrieving coin apps
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/coin-apps
          token: ${{ secrets.PAT }}
          path: coin-apps
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - name: pull docker image
        run: docker pull ghcr.io/ledgerhq/speculos
      - name: Install linux deps
        run: sudo apt-get install -y libusb-1.0-0-dev jq
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile
          yarn ci-setup-cli
      - name: BOT
        env:
          SHOW_LEGACY_NEW_ACCOUNT: "1"
          DEBUG_HTTP_RESPONSE: "1"
          SEED: ${{ secrets.SEED5 }}
          VERBOSE_FILE: bot-tests.txt
          GITHUB_SHA: ${GITHUB_SHA}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: live-ft-taproot
          BOT_FILTER_FAMILY: bitcoin
          EXPERIMENTAL_EXPLORERS: true
          EXPERIMENTAL_CURRENCIES_JS_BRIDGE: bitcoin,bitcoin_cash,bsc,litecoin,dash,qtum,zcash,bitcoin_gold,stratis,dogecoin,digibyte,komodo,pivx,zencash,vertcoin,peercoin,viacoin,stakenet,stealthcoin,decred,bitcoin_testnet,tezos
        run: COINAPPS=$PWD/coin-apps yarn ci-test-bot
        timeout-minutes: 60
      - name: Run coverage
        if: failure() || success()
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} npx codecov
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v1
        with:
          name: bot-tests.txt
          path: bot-tests.txt

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs: [start-runner, run-bot]
    runs-on: [ledger-live-common]
    if: always()
    steps:
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
