name: Tests
on: [push, pull_request]

jobs:
  jest:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v1
        with:
          python-version: "2.7.x"
      - name: Versions
        run: |
          node -v
          yarn -v
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn global add yalc codecov
          yarn --frozen-lockfile
      - name: Setup Tests
        run: yarn ci-setup-cli
      - name: Deps versions
        run: yarn jest --version
      - name: Lint
        run: yarn ci-lint
        if: runner.os != 'Windows'
      - name: Setup TimeZone for Windows
        run: tzutil /s "Eastern Standard Time"
        if: runner.os == 'Windows'
      - name: Run tests
        run: npx cross-env VERBOSE_FILE=tests_output.txt yarn ci-test-common
        timeout-minutes: 60
      - name: Run coverage
        if: runner.os == 'macOS'
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} npx codecov
      - name: upload snapshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: snapshots-${{ runner.os }}
          path: src/__tests__/__snapshots__/
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v2
        with:
          name: tests_output-${{ runner.os }}.txt
          path: tests_output.txt

  cli:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v1
        with:
          python-version: "2.7.x"
      - name: Install linux deps
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libusb-1.0-0-dev jq
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile
          yarn ci-setup-cli
      - name: Run CLI tests
        run: yarn ci-test-cli
        timeout-minutes: 60
